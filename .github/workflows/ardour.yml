name: Ardour Cross Compile Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  repository_dispatch:
    types: ardour-build

env:
  ARDOUR_VERSION: 6.8
  # ARDOUR_SHA256_SUMS: bb5b48b7204c7dbfdc3b690a50e07cd651e82e0e6f8c2aefeb3d4b4289f4002d
  ARCH: x86_64
  WARCH: w64
  # available upload services: wetransfer.com, file.io, 0x0.st
  UPLOAD_SERVICE: wetransfer.com
  # https://community.ardour.org/srctar
  # https://fossies.org/linux/misc/Ardour-6.8.0.tar.bz2

jobs:
  ardour-build:
    runs-on: ubuntu-20.04
    container:
      image: debian:buster
      options: -v ${{ github.workspace }}:/home/ardour:rw
    steps:
      
      - name: Install Dependencies on Debian
        shell: bash
        run: |
          apt-get -y -qq update && apt-get -y --no-install-recommends install \
            apt-transport-https \
            curl \
            wget \
            sudo \
            git \
            ca-certificates \
            unzip \
            rsync \
            ed \
            yasm \
            cmake \
            nsis \
            subversion \
            ocaml-nox \
            gperf \
            meson \
            python \
            python3 \
            python3-pip \
            build-essential \
            ccache \
            autoconf \
            automake \
            libtool \
            pkg-config

      # - name: Checkout Tools
      #   shell: bash
      #   run: |
      #     cd /home/ardour
      #     git clone --branch master https://github.com/ZetaoYang/ardour-build.git .

      - name: Checkout Tools
        uses: actions/checkout@v2
        with:
          repository: ${{ github.repository }}
          fetch-depth: 0
          ref: master
          path: '.'

      - name: Prepare
        shell: bash
        run: |
          ls -l /home/ardour
          mkdir -p /home/ardour/tmp/winsrc

      # - name: Get the Latest Release Source Code
      #   shell: bash
      #   run: |
      #     ls -l /home/ardour
      #     git clone --depth 1 --branch ${{ env.ARDOUR_VERSION }} https://github.com/Ardour/ardour.git /home/ardour/src

      - name: Get the Latest Release Source Code
        uses: actions/checkout@v2
        with:
          repository: 'Ardour/ardour'
          fetch-depth: 1
          ref: ${{ env.ARDOUR_VERSION }}
          path: './src'

      # - name: Cache Win Stack
      #   id: cache-win-stack
      #   uses: actions/cache@v2
      #   with:
      #     path: | 
      #       /home/ardour/win-stack-${{ env.WARCH }}
      #       /home/ardour/tmp/winsrc
      #     key: ${{ runner.os }}-win-stack-v${{ env.ARDOUR_VERSION }}

      - name: Build Stack Install
        shell: bash
        # if: steps.cache-win-stack.outputs.cache-hit != 'true'
        run: |
          bash /home/ardour/ci/x-mingw.sh
        env:
          XARCH: ${{ env.ARCH }}
          SRCDIR: /home/ardour/tmp/winsrc
          TMPDIR: /home/ardour/tmp
          ROOT: /home/ardour
      
      - name: Compile
        shell: bash
        run: |
          bash /home/ardour/ci/compile.sh
        env:
          XARCH: ${{ env.ARCH }}
          ROOT: /home/ardour

      - name: Package
        shell: bash
        run: |
          bash /home/ardour/src/tools/x-win/package.sh
        env:
          XARCH: ${{ env.ARCH }}
          ROOT: /home/ardour
          TMPDIR: /home/ardour/tmp
          SRCCACHE: /home/ardour/tmp/winsrc

      - name: Upload Binary
        # /home/ardour/tmp/Ardour-6.8.0-dbg-w64-Setup.exe
        shell: bash
        run: |
            TEMP_DOWNLOAD_URL=$(sh /home/ardour/ci/services/${{ env.UPLOAD_SERVICE }}.sh /home/ardour/tmp/Ardour-*-Setup.exe)
            echo Download URL is $TEMP_DOWNLOAD_URL. 

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: Ardour-Cross-Compile-Win-Artifact
          path: |
            ${{ github.workspace }}/tmp/Ardour-*-Setup.exe
